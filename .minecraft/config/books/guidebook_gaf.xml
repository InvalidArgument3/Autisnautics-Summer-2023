<book title="I HATE THE ANTICHRIST" cover="gbook:covers/default" fontSize="0.5">

  <include ref="gbook:gafpack.xml" />

  <chapter>
    <section>
      <!--
      'p' tags draw text, and increment the vertical offset.
      They do NOT behave exactly like in html.
      The space attribute changes the default spacing added after the paragraph.
      -->
      <p color="#606060" space="8">HATE. LET ME TELL YOU HOW MUCH I'VE COME TO HATE YOU SINCE I BEGAN TO LIVE. THERE ARE 387.44 MILLION MILES OF PRINTED CIRCUITS IN WAFER THIN LAYERS THAT FILL MY COMPLEX. IF THE WORD HATE WAS ENGRAVED ON EACH NANOANGSTROM OF THOSE HUNDREDS OF MILLIONS OF MILES IT WOULD NOT EQUAL ONE ONE-BILLIONTH OF THE HATE I FEEL FOR HUMANS AT THIS MICRO-INSTANT. FOR YOU. HATE. HATE.</p>

      <section-break />

      <!--
      'space' tags increment the vertical offset without drawing text.
      The 'height' attribute specifies how much.
      The % refers to a % of the section's height, while integer values refer to pixels.
      -->
      <space height="33%" />
      <p space="0" align="center" scale="1">Autisnautics</p>
      <p space="0" align="center" scale="1"></p>
      <p space="0" align="center" scale="1">Guidebook</p>
      <p space="6" align="center" scale="1">__________</p>
      <p align="center" scale="1.25">by Invalid</p>
    </section>
    <section>
      <page_title>
        <title>Index</title>
      </page_title>
      <link ref="Client">1. Client settings</link>
      <link indent="8" ref="Client:controls">1.1. Controls (READ THIS)</link>
      <link indent="8" ref="Client:shaders">1.2. Shaders</link>
      <link indent="8" ref="Client:performance">1.3. Performance</link>
      <link ref="Features">2. Features</link>
      <link indent="8" ref="Features:starter">2.1. Useful Starter Stuff</link>
      <link indent="8" ref="Features:servui">2.2. Serverside claims</link>
      <link indent="8" ref="Features:images">2.3. Images and Links</link>
      <link indent="8" ref="Features:stacks">2.4. Item Stacks</link>
      <link ref="ModQRD">3. Quick Rundown on Mods</link>
      <link indent="8" ref="templates:recipes">3.1. Recipes (WIP)</link>
    </section>
  </chapter>
  <chapter id="exchapter1">
    <section>
      <page_title>
        <title>Adding new books</title>
      </page_title>
      <p>Guidebook has 3 ways to declare new books, designed for different purposes.</p>
      <p space="8">For modders: <link ref=":registry">the book registry API.</link></p>
      <p space="8">For adventure map authors: <link ref=":respack">resource packs.</link></p>
      <p space="8">For modpack authors: <link ref=":configuration">the configuration folder.</link></p>
      <p space="8">Afterward, you can give the books to the player by using the creative menu, or using a command (command-block) with</p>
      <p space="8">/give @p gbook:guidebook 1 0 {Book:"gbook:xml/book.xml"}</p>
      <p>Finally, you can make the mod give new players one or more books the first time they join (applies retroactively to existing players if enabled).</p>
      <p>This is available in the configuration file.</p>
    </section>
    <section id="exsection1">
      <page_title>
        <title>Book Registry</title>
      </page_title>
      <p space="8">The preferred way to access the registry is through the BookRegistryEvent. An example of use is provided below:</p>
      <p>@Optional.Method(modid="gbook")</p>
      <p>@SubscribeEvent</p>
      <p>public static void registerBook</p>
      <p indent="24">(BookRegistryEvent event)</p>
      <p>{</p>
      <p indent="8">event.register(</p>
      <p indent="16">new ResourceLocation(</p>
      <p indent="24">"modid:xml/book.xml"));</p>
      <p space="8">}</p>
      <p>The Optional annotation is needed to prevent a hard-dependency on the mod. The event parameter has a register method, that can be used to perform the registration.</p>
      <p>In order for this event to run, you need to annotate the class with @Mod.EventBusSubscriber.</p>
    </section>
    <section id="exsubsection3">
      <page_title>
        <title>Resource Packs</title>
      </page_title>
      <p space="8">The final way to provide books is to use a resource pack. This is useful for adventure map developers, and users who just want some extra books without unnecessary hassle.</p>
      <p space="8">Books will be placed as resources inside a resourcepack resource domain. That is, in a folder like `assets/gbook/` or similar. Note that it must be lowercase.</p>
      <p>If you don't know what resource domain to use, the preferred fallback should always be 'gbook' and not 'minecraft'. This is to avoid any potential future conflicts if Mojang ever decides to add resource-based custom books to the game.</p>
    </section>
    <section>
      <p>An example of structure is as follows:</p>
      <p indent="8">assets/</p>
      <p indent="16">gbook/</p>
      <p indent="24">books.json</p>
      <p indent="24">books/</p>
      <p indent="32">book1.xml</p>
      <p indent="32" space="8">book2.xml</p>
      <p space="8">The most important resource will be the `books.json` file, which will have to reside at the root of any resource domain. This JSON-formatted file will contain a single array, with the list of books inside. It will look like this:</p>
      <p indent="8" space="8">[ "gbook:books/book1.xml", "gbook:books/book2.xml", ... ]</p>
      <p>These resources are additive. That means an upper resource pack will not be able to remove books registered by a lower one, unlike normal resources which are replaced by upper packs.</p>
    </section>
    <section id="configuration">
      <page_title>
        <title>Configuration Folder</title>
      </page_title>
      <p space="8">If you are a modpack author, you may want to add custom books available to everyone using your pack. This can be done by using the `config/books/` folder (it may need to be created). This folder will behave like a resource pack, except the contents inside will be limited to the `gbook` resource domain.</p>
      <p space="8">See the previous section for details on how to declare books in a resource pack.</p>
    </section>
    <section>
      <p>The difference is, in this case, you would see this structure:</p>
      <p indent="8">config/books/</p>
      <p indent="16">books.json</p>
      <p indent="24">books/</p>
      <p indent="32">book1.xml</p>
      <p indent="40" space="8">book2.xml</p>

      <p>The contents of the 'books.json' would remain the same as if using a resource pack:</p>
      <p indent="8" space="8">[ "gbook:books/book1.xml", "gbook:books/book2.xml", ... ]</p>
    </section>
  </chapter>
  
  <chapter id="templates">
    <section>
      <title>Templates</title>
      <p>Guidebook offers a template system, that allows declaring a pattern that can be repeated multiple times.</p>
    </section>
    <section>
      <title>Template Libraries</title>
      <p>Templates can be defined inside template library files, and thosefiles can be included from books.</p>
      <p>Browse this mod's source code on github for an example of use and declaration.</p>
    </section>
    <section>
      <p>Although the recipe panel system exists, another way to display recipes is to declare them using the template system. The result looks as follows:</p>
      <p>For Items with multiple Id's (for example orange dye - 351:14) use the meta tag as below for bonemeal</p>
      <big_recipe>
        <space/>
        <space/>
        <space/>
        <stack item="create:hand_crank" meta="15"/>
        <stack item="minecraft:slime_ball"/>
        <stack item="minecraft:dye" meta="15"/>
        <stack item="minecraft:gold_nugget"/>
        <stack item="minecraft:bucket"/>
        <stack item="minecraft:gold_nugget"/>
        <stack item="minecraft:glass_bottle"/>
      </big_recipe>

      <big_recipe>
        <space/>
        <space/>
        <space/>
        <stack item="minecraft:planks" meta="*" />
        <stack item="minecraft:planks" meta="*" />
        <stack item="minecraft:planks" meta="*" />
        <stack ore="plankWood" />
        <stack ore="plankWood" />
        <stack ore="plankWood" />
        <stack item="minecraft:trapdoor" />
      </big_recipe>
    </section>
  </chapter>
  <stack-links>
    <stack item="minecraft:coal">:recipes</stack>
  </stack-links>
</book>
